---
name: Tests
"on":
  push:
    branches:
      - main
  pull_request:
  schedule:
    # Run tests every Monday at 9:17 to catch regressions.
    - cron: "17 9 * * 1"

concurrency:
  # Group workflow jobs so new commits cancels in-progress execution triggered by previous commits. Source:
  # https://mail.python.org/archives/list/pypa-committers@python.org/thread/PCBCQMJF64JGRBOX7E2EE4YLKHT4DI55/
  # https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/control-the-concurrency-of-workflows-and-jobs
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:

  tests:
    strategy:
      fail-fast: false
      matrix:
        # Available OS: https://github.com/actions/runner-images#available-images
        # To speed up the tests, we only test the latest available OS for each platform.
        os:
          - ubuntu-24.04-arm # arm64
          - macos-26         # arm64
          - windows-11-arm   # arm64
        # For Python, we only test against the oldest and newest major supported version and skip intermediates. We
        # also test on the upcoming development version to anticipate issues.
        python-version:
          - "3.11"
          # - "3.12"
          # - "3.13"
          - "3.14"
          - "3.15"
        include:
          # Default all jobs as stable, unless marked otherwise below.
          - state: stable
          # XXX Python 3.15 is still in development.
          - state: unstable
            python-version: "3.15"
    name: "${{ matrix.state == 'stable' && '✅' || '⁉️' }} ${{ matrix.os }} / py${{ matrix.python-version }}"
    runs-on: ${{ matrix.os }}
    # We keep going when a job flagged as not stable fails.
    continue-on-error: ${{ matrix.state == 'unstable' }}
    steps:
      - uses: actions/checkout@v5.0.0
      - uses: astral-sh/setup-uv@v7.1.1
      - name: Install Python ${{ matrix.python-version }}
        # If UV cannot find the requested Python version, it exits with code 2, which let the job pass unnoticed on
        # Windows. So we force the shell to bash, even on Windows, and "set -e" to ensure any error in the install
        # process is caught and fails the job. It works because Windows runners too Git Bash available).
        shell: bash
        run: |
          set -e
          uv --no-progress venv --python ${{ matrix.python-version }}
      - name: Install project
        run: |
          uv --no-progress sync --frozen --extra test

      - name: Check launchable modules
        run: |
          uv run -m mail_deduplicate --version
          uv run python -m mail_deduplicate --version
      - name: Check launchable CLI
        run: |
          uvx -- mdedup --version
          uv run -- mdedup --version

      - name: Unittests
        run: |
          uv --no-progress run --frozen -- pytest

      - name: Codecov - coverage
        uses: codecov/codecov-action@v5.4.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Codecov - test results
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1.1.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}