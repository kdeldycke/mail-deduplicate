[tool.poetry]
# Docs: https://python-poetry.org/docs/pyproject/
name = "mail-deduplicate"
version = "7.3.1"
description = "ðŸ“§ CLI to deduplicate mails from mail boxes."
license = 'GPL-2.0-or-later'
authors = ["Kevin Deldycke <kevin@deldycke.com>"]
readme = "readme.md"
homepage = 'https://github.com/kdeldycke/mail-deduplicate'
repository = 'https://github.com/kdeldycke/mail-deduplicate'
documentation = 'https://kdeldycke.github.io/mail-deduplicate'
keywords = [
    'CLI',
    'mail',
    'email',
    'maildir',
    'mbox',
    'deduplication',
    'dedupe',
    'cleanup',
    'mailbox',
    'Babyl',
    'MH',
    'mbox',
    'MMDF',
]
classifiers = [
    # See: https://pypi.org/pypi?%3Aaction=list_classifiers
    'Development Status :: 5 - Production/Stable',
    'Environment :: Console',
    'Intended Audience :: Developers',
    'Intended Audience :: Information Technology',
    'Operating System :: MacOS',
    'Operating System :: Microsoft :: Windows',
    'Operating System :: POSIX',
    'Programming Language :: Python :: Implementation :: CPython',
    'Topic :: Communications :: Email',
    'Topic :: Utilities',
    'Typing :: Typed',
]

[tool.poetry.urls]
"Funding" = "https://github.com/sponsors/kdeldycke"
"Issues" = "https://github.com/kdeldycke/mail-deduplicate/issues"
"Changelog" = "https://kdeldycke.github.io/mail-deduplicate/changelog.html"

[tool.poetry.dependencies]
# Python versions and their status: https://devguide.python.org/versions/
python = "^3.8"
arrow = "^1.2.3"
boltons = "^24.0.0"
click-extra = "^4.8.3"
tabulate = { version = "^0.9.0", extras = ["widechars"] }

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
click-extra = { version = "^4.8.3", extras = ["pytest"] }
coverage = { version = "^7.2", extras = ["toml"] }
pytest = "^8.0.2"
# More pytest plugins at: https://docs.pytest.org/en/latest/reference/plugin_list.html
pytest-cov = "^5.0.0"
pytest-github-actions-annotate-failures = "^0.2.0"
pytest-randomly = "^3.12.0"

[tool.poetry.group.typing]
optional = true

[tool.poetry.group.typing.dependencies]
types-tabulate = "^0.9.0"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
click-extra = { version = "^4.8.3", extras = ["sphinx"] }
furo = "^2024.1.29"
myst-parser = "^3.0.0"
# Sphinx 6 is the first version to drop Python 3.7.
sphinx = ">=6"
sphinx-autodoc-typehints = "^2.0.0"
sphinx-click = "^6.0.0"
sphinx-copybutton = "^0.5.2"
# sphinx-design 0.5.0 is the first to allow Sphinx 7.
sphinx-design = "^0.5.0"
sphinx-issues = "^4.0.0"
sphinxcontrib-mermaid = "^0.9.2"
sphinxext-opengraph = "^0.9.0"
tomli = { version = "^2.0.1", python = "< 3.11" }

[tool.poetry.scripts]
mdedup = 'mail_deduplicate.__main__:main'

[tool.mypy]
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
pretty = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = ["boltons.*"]

[tool.pytest.ini_options]
# https://docs.pytest.org/en/latest/customize.html#pyproject-toml
testpaths = ["tests/"]
addopts = [
    "--durations=10",
    "--cov-report=term",
    "--cov-report=xml",
    # --cov-config=pyproject.toml : is specified at CLI level instead of letting coverage find it because of this bug:
    # https://github.com/nedbat/coveragepy/issues/512#issuecomment-399707938
    # https://github.com/pytest-dev/pytest-cov/issues/168#issuecomment-327533847
    # https://github.com/pytest-dev/pytest-cov/issues/243
    "--cov-config=pyproject.toml",
    "--cov=mail_deduplicate",
]
# Make sure tests that are expected to fail do not resurect and start working all of a sudden.
xfail_strict = true

# https://coverage.readthedocs.io/en/latest/config.html
[tool.coverage.run]
branch = true
[tool.coverage.report]
precision = 2

[tool.bumpversion]
current_version = "7.3.1"
allow_dirty = true

[[tool.bumpversion.files]]
# Update Python package version in any __init__.py file.
glob = "./**/__init__.py"
ignore_missing_version = true

[[tool.bumpversion.files]]
# Update version in Poetry section.
filename = "./pyproject.toml"
search = 'version = "{current_version}"'
replace = 'version = "{new_version}"'

[[tool.bumpversion.files]]
# Update the version in standard Markdown changelog.
filename = "./changelog.md"
search = "## [{current_version} (unreleased)]("
replace = "## [{new_version} (unreleased)]("

[[tool.bumpversion.files]]
# Update the version in the citation file.
filename = "./citation.cff"
search = "version: {current_version}"
replace = "version: {new_version}"

[[tool.bumpversion.files]]
# Update the release date in the citation file.
filename = "./citation.cff"
regex = true
search = "date-released: \\d{{4}}-\\d{{2}}-\\d{{2}}"
replace = "date-released: {utcnow:%Y-%m-%d}"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
